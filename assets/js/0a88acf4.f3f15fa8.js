"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[580],{7462:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>r,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"oauth-guide","title":"Login with OAuth","description":"Our OAuth service is based on the OAuth 2.0 Industry-standard protocol. You can read more here:","source":"@site/docs/oauth-guide.md","sourceDirName":".","slug":"/oauth-guide","permalink":"/oauth-guide","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"oauth-guide","title":"Login with OAuth","sidebar_label":"OAuth Guide"},"sidebar":"tutorialSidebar","previous":{"title":"Member lookup","permalink":"/member-lookup"}}');var o=i(4848),s=i(8453);const r={id:"oauth-guide",title:"Login with OAuth",sidebar_label:"OAuth Guide"},l="Introduction",c={},h=[{value:"Domains",id:"domains",level:2},{value:"Before You Start",id:"before-you-start",level:2},{value:"OAuth 2.0 Flow",id:"oauth-20-flow",level:2},{value:"Support",id:"support",level:2}];function d(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,o.jsxs)(n.p,{children:["Our OAuth service is based on the OAuth 2.0 Industry-standard protocol. You can read more here:\n",(0,o.jsx)(n.a,{href:"https://oauth.net/2/",children:"https://oauth.net/2/"})]}),"\n",(0,o.jsx)(n.h2,{id:"domains",children:"Domains"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Test environment: ",(0,o.jsx)(n.a,{href:"https://test-auth.golfbox.io/",children:"https://test-auth.golfbox.io/"})]}),"\n",(0,o.jsxs)(n.li,{children:["Production environment: ",(0,o.jsx)(n.a,{href:"https://auth.golfbox.io/",children:"https://auth.golfbox.io/"})]}),"\n",(0,o.jsxs)(n.li,{children:["Discovery endpoint: ",(0,o.jsx)(n.code,{children:"{domain}/.well-known/openid-configuration"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"The Discovery endpoint contains information about endpoints, available scopes, key material, and features of the OAuth service."}),"\n",(0,o.jsx)(n.h2,{id:"before-you-start",children:"Before You Start"}),"\n",(0,o.jsx)(n.p,{children:"Before you can use the OAuth service, you need:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"A Client ID issued by Dansk Golf Union (DGU)"}),"\n",(0,o.jsx)(n.li,{children:"Redirect URI(s) registered with DGU. Where you want the users to return to on your site/app once logged in (see below)"}),"\n",(0,o.jsx)(n.li,{children:"Scopes (API access levels) you need (this will be supplied by DGU)"}),"\n",(0,o.jsxs)(n.li,{children:["Grant type: ",(0,o.jsx)(n.code,{children:"authorization_code"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"If you are integrating OAuth into a mobile app, you may use a custom URI scheme or App Link / Universal Link as your Redirect URI. This is common in mobile apps where users should be redirected back to the app after login."}),"\n",(0,o.jsx)(n.p,{children:"Examples:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Custom URI scheme (Android/iOS): com.yourappname://oauth/callback"}),"\n",(0,o.jsxs)(n.li,{children:["Universal Link (iOS) or App Link (Android): ",(0,o.jsx)(n.a,{href:"https://yourdomain.com/oauth/callback",children:"https://yourdomain.com/oauth/callback"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"The chosen Redirect URI must be pre-registered with Dansk Golf Union (DGU) and must exactly match the value used in the authorization request."}),"\n",(0,o.jsx)(n.h2,{id:"oauth-20-flow",children:"OAuth 2.0 Flow"}),"\n",(0,o.jsxs)(n.p,{children:["The uri for this call is ",(0,o.jsx)(n.code,{children:"{domain}/connect/authorize"}),". Below you will find all of the required\nparameters for this request. A full list of all available parameters can be found here:\n",(0,o.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest",children:"https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest"})]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"client_id: Identifier of the client."}),"\n",(0,o.jsx)(n.li,{children:"scope: One or more registered scopes."}),"\n",(0,o.jsx)(n.li,{children:"response_type: Determines the authorization processing flow. When using the Authorization Code Flow, this value is code."}),"\n",(0,o.jsx)(n.li,{children:"redirect_uri: Redirection URI to which the response will be sent. Note that this must match a uri saved on our server."}),"\n",(0,o.jsxs)(n.li,{children:["code_challenge: Used for PKCE protection, see OAuth\u2019s official documentation here:\n",(0,o.jsx)(n.a,{href:"https://www.oauth.com/oauth2-servers/pkce/authorization-request",children:"https://www.oauth.com/oauth2-servers/pkce/authorization-request"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"PKCE secures OAuth by sending a hashed code challenge during auth and later verifying it with the original code verifier.\nGenerate like this:"}),"\n",(0,o.jsxs)(n.p,{children:["Code verifier: '''openssl rand -base64 32'''\nCode challenge (S256): '''echo -n \"your_code_verifier\" | openssl dgst -sha256 -binary | openssl base64 | tr -d '=' | tr '/+' '_-''''\nOr use a tool like: ",(0,o.jsx)(n.a,{href:"https://tonyxu-io.github.io/pkce-generator/",children:"https://tonyxu-io.github.io/pkce-generator/"})]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"code_challenge_method: Used for PKCE protection. In almost all cases, this value is S256."}),"\n",(0,o.jsx)(n.li,{children:"country_iso (DK)"}),"\n"]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Redirect the user to the authorization endpoint:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"GET {domain}/connect/authorize?\n  client_id=YOUR_CLIENT_ID&\n  scope=get_player.information none union&\n  response_type=code&\n  redirect_uri=YOUR_CALLBACK_URL&\n  code_challenge=CODE_CHALLENGE&\n  code_challenge_method=S256&\n  country_iso_code=DK&\n  prompt=login\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"After successfully authorizing, the user will be presented with a login page. Here the user needs to\nlogin with a valid GolfBox member account. After a successful login, he/she will be greeted by our\nconsent page, with an option to either allow or disallow the sharing of user information. If the user\nagrees to share his/hers information, the page will be redirected to the supplied Redirect Uri with\n2 query parameters attached. For some clients the consent page will not be shown, in this case the\nredirect will happen after a successful login."}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"The following will be returned to your redirect URL"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"code: This is the authorization_code."}),"\n",(0,o.jsx)(n.li,{children:"scope: The accepted scopes."}),"\n"]}),"\n",(0,o.jsxs)(n.ol,{start:"4",children:["\n",(0,o.jsxs)(n.li,{children:["Exchange the ",(0,o.jsx)(n.code,{children:"code"})," for an access token."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["The uri for this call is ",(0,o.jsx)(n.code,{children:"{domain}/connect/token"}),". Below you will find all of the required parameters\nfor this request. A full list of all available parameters can be found here:\n",(0,o.jsx)(n.a,{href:"https://openid.net/specs/openid-connect-core-1_0.html#TokenRequest",children:"https://openid.net/specs/openid-connect-core-1_0.html#TokenRequest"})]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"client_id: Identifier of the client"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"client_secret: Access code for token (only in issued by DGU)"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"grant_type: This value is authorization_code."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"redirect_uri: Redirection URI to which the response will be sent. Note that this must match a uri saved on our server."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"code: The authorization code received from the authorize request"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"code_verifier: Used for PKCE protection, PKCE proof key."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"POST {domain}/connect/token?\nclient_id=YOUR_CLIENT_ID&\nclient_secret=YOUR_CLIENT_SECRET&\ngrant_type=authorization_code&\nredirect_uri=YOUR_CALLBACK_URL&\ncode=AUTHORIZATION_CODE&\ncode_verifier=ORIGINAL_CODE_VERIFIER\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"If you were not issued with a client_secret leave that out of the API"}),"\n",(0,o.jsx)(n.p,{children:"Content-Type: application/x-www-form-urlencoded"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.ol,{start:"5",children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Receive a response like:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "access_token": "ACCESS_TOKEN",\n  "expires_in": 31556926,\n  "token_type": "Bearer",\n  "scope": "Scopes",\n  "sub": "USER_ID",\n  "sub_country_iso_code": "DK"\n}\n'})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Use the access token to call a protected API:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"https://<domain>/<apiset>/clubs/Golfer_ByAccessToken\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"All requests to the API must include the following headers:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Content-Type: application/json\nAccept: application/json\nAuthorization: Basic <username:password>\nToken: <OAuth token>\n"})}),"\n",(0,o.jsx)(n.h2,{id:"support",children:"Support"}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.p,{children:["If you have questions or need help, contact Dansk Golf Union:",(0,o.jsx)(n.br,{}),"\n","Email: ",(0,o.jsx)(n.a,{href:"mailto:it@dgu.org",children:"it@dgu.org"})]})]})}function a(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var t=i(6540);const o={},s=t.createContext(o);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);