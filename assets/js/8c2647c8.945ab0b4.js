"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[850],{2138:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>E,contentTitle:()=>S,default:()=>w,frontMatter:()=>v,metadata:()=>r,toc:()=>F});const r=JSON.parse('{"id":"integration-guide","title":"Integration Guide for Scoring Apps","description":"The Union Database holds information related to golf clubs and their members.","source":"@site/docs/integration-guide.mdx","sourceDirName":".","slug":"/integration-guide","permalink":"/integration-guide","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"integration-guide","title":"Integration Guide for Scoring Apps","sidebar_label":"App til scoreindberetning"},"sidebar":"tutorialSidebar","previous":{"title":"Velkommen","permalink":"/"},"next":{"title":"Member lookup","permalink":"/member-lookup"}}');var t=s(4848),i=s(8453),d=s(6540),l=s(4164),c=s(3104),a=s(6347),o=s(205),h=s(7485),x=s(1682),j=s(679);function u(e){return d.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,d.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:n,children:s}=e;return(0,d.useMemo)((()=>{const e=n??function(e){return u(e).map((({props:{value:e,label:n,attributes:s,default:r}})=>({value:e,label:n,attributes:s,default:r})))}(s);return function(e){const n=(0,x.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,s])}function p({value:e,tabValues:n}){return n.some((n=>n.value===e))}function b({queryString:e=!1,groupId:n}){const s=(0,a.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,h.aZ)(r),(0,d.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(s.location.search);n.set(r,e),s.replace({...s.location,search:n.toString()})}),[r,s])]}function f(e){const{defaultValue:n,queryString:s=!1,groupId:r}=e,t=m(e),[i,l]=(0,d.useState)((()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const s=n.find((e=>e.default))??n[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:t}))),[c,a]=b({queryString:s,groupId:r}),[h,x]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[s,r]=(0,j.Dv)(n);return[s,(0,d.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:r}),u=(()=>{const e=c??h;return p({value:e,tabValues:t})?e:null})();(0,o.A)((()=>{u&&l(u)}),[u]);return{selectedValue:i,selectValue:(0,d.useCallback)((e=>{if(!p({value:e,tabValues:t}))throw new Error(`Can't select invalid tab value=${e}`);l(e),a(e),x(e)}),[a,x,t]),tabValues:t}}var g=s(2303);const I={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function D({className:e,block:n,selectedValue:s,selectValue:r,tabValues:i}){const d=[],{blockElementScrollPositionUntilNextRender:a}=(0,c.a_)(),o=e=>{const n=e.currentTarget,t=d.indexOf(n),l=i[t].value;l!==s&&(a(n),r(l))},h=e=>{let n=null;switch(e.key){case"Enter":o(e);break;case"ArrowRight":{const s=d.indexOf(e.currentTarget)+1;n=d[s]??d[0];break}case"ArrowLeft":{const s=d.indexOf(e.currentTarget)-1;n=d[s]??d[d.length-1];break}}n?.focus()};return(0,t.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":n},e),children:i.map((({value:e,label:n,attributes:r})=>(0,t.jsx)("li",{role:"tab",tabIndex:s===e?0:-1,"aria-selected":s===e,ref:e=>{d.push(e)},onKeyDown:h,onClick:o,...r,className:(0,l.A)("tabs__item",I.tabItem,r?.className,{"tabs__item--active":s===e}),children:n??e},e)))})}function C({lazy:e,children:n,selectedValue:s}){const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=r.find((e=>e.props.value===s));return e?(0,d.cloneElement)(e,{className:(0,l.A)("margin-top--md",e.props.className)}):null}return(0,t.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,d.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function A(e){const n=f(e);return(0,t.jsxs)("div",{className:(0,l.A)("tabs-container",I.tabList),children:[(0,t.jsx)(D,{...n,...e}),(0,t.jsx)(C,{...n,...e})]})}function T(e){const n=(0,g.A)();return(0,t.jsx)(A,{...e,children:u(e.children)},String(n))}const N={tabItem:"tabItem_Ymn6"};function y({children:e,hidden:n,className:s}){return(0,t.jsx)("div",{role:"tabpanel",className:(0,l.A)(N.tabItem,s),hidden:n,children:e})}const v={id:"integration-guide",title:"Integration Guide for Scoring Apps",sidebar_label:"App til scoreindberetning"},S="Introduction",E={},F=[{value:"Document Audience",id:"document-audience",level:2},{value:"Definitions",id:"definitions",level:2},{value:"Identifiers",id:"identifiers",level:2},{value:"Data format",id:"data-format",level:2},{value:"Authentication",id:"authentication",level:2},{value:"API Set",id:"api-set",level:2},{value:"Base URL",id:"base-url",level:2},{value:"Request headers",id:"request-headers",level:2},{value:"Token",id:"token",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"Clubs",id:"clubs",level:2},{value:"How do I look up club info?",id:"how-do-i-look-up-club-info",level:3},{value:"Courses",id:"courses",level:2},{value:"How do I look up club courses?",id:"how-do-i-look-up-club-courses",level:3},{value:"Available parameters",id:"available-parameters",level:3},{value:"Members",id:"members",level:2},{value:"How do I look up member info?",id:"how-do-i-look-up-member-info",level:3},{value:"Re point 1:",id:"re-point-1",level:3},{value:"Re point 2:",id:"re-point-2",level:3},{value:"Scores",id:"scores",level:2},{value:"How do I create scorecards?",id:"how-do-i-create-scorecards",level:2},{value:"How do I see all available APIs?",id:"how-do-i-see-all-available-apis",level:2},{value:"Test data",id:"test-data",level:2},{value:"Support",id:"support",level:2}];function B(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,t.jsx)(n.p,{children:"The Union Database holds information related to golf clubs and their members."}),"\n",(0,t.jsx)(n.p,{children:"Continuously the Union Database also holds information about scores of members. Scoring app has access through the API via an API account."}),"\n",(0,t.jsx)(n.h2,{id:"document-audience",children:"Document Audience"}),"\n",(0,t.jsx)(n.p,{children:"This document is for scoring apps who must post scores into the Union Database."}),"\n",(0,t.jsx)(n.h2,{id:"definitions",children:"Definitions"}),"\n",(0,t.jsx)(n.p,{children:"There are a few definitions worth knowing about."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Club"}),(0,t.jsx)(n.br,{}),"\n","A golf club has an official name, a short name, a number, and possibly an address."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Course"}),(0,t.jsx)(n.br,{}),"\n","A course is the actual course created by the club. A course has one or more tees with 9 or 18 holes."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Member"}),(0,t.jsx)(n.br,{}),"\n","A member is a person with one or more memberships. This means that the same person can have two or more memberships of different golf clubs."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Scorecard"}),(0,t.jsx)(n.br,{}),"\n","A scorecard holds information about the player, the course, the marker, and the actual score."]}),"\n",(0,t.jsx)(n.h2,{id:"identifiers",children:"Identifiers"}),"\n",(0,t.jsx)(n.p,{children:"All objects in the database have identifiers in the form of a GUID (Globally Unique Identifier)."}),"\n",(0,t.jsx)(n.p,{children:"The Scorecard object contains an External ID. This ID is supplied by the scoring app to reference a scorecard in the union database. This makes it simpler to modify a scorecard, because the scoring apps does not need to register the GUID locally."}),"\n",(0,t.jsx)(n.h2,{id:"data-format",children:"Data format"}),"\n",(0,t.jsx)(n.p,{children:"The data format used for exchanging data through the API is JSON."}),"\n",(0,t.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,t.jsxs)(n.p,{children:["Access to the API is done through ",(0,t.jsx)(n.strong,{children:"Basic Authentication"}),". Each vendor will be given an API account with a username and password. Each account is authorized to use a certain set of API resources."]}),"\n",(0,t.jsx)(n.h2,{id:"api-set",children:"API Set"}),"\n",(0,t.jsxs)(n.p,{children:["All requests to the API must include an ",(0,t.jsx)(n.strong,{children:"API Set"})," in the URL. The API Set is equal to the ",(0,t.jsx)(n.strong,{children:"username"})," of the account unless otherwise instructed."]}),"\n",(0,t.jsx)(n.h2,{id:"base-url",children:"Base URL"}),"\n",(0,t.jsx)(n.p,{children:"The base urls for DGU is"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"dgubasen.api.union.golfbox.io"}),"\n",(0,t.jsx)(n.li,{children:"test-dgubasen.api.union.golfbox.io"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"request-headers",children:"Request headers"}),"\n",(0,t.jsx)(n.p,{children:"All requests to the API must include the following headers:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Content-Type: application/json\nAccept: application/json\nAuthorization: Basic <username:password>\nToken: <OAuth token>\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"username:password"})," combination must be ",(0,t.jsx)(n.strong,{children:"Base64 encoded"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"token",children:"Token"}),"\n",(0,t.jsx)(n.p,{children:"The token for an API with player information is retrieved through the OAuth 2.0 Authorization Code Flow with PKCE. After the user logs in and grants consent, your application receives an authorization code. This code must then be exchanged for an access token via the token endpoint."}),"\n",(0,t.jsx)(n.p,{children:"Once retrieved, the access token should be included as a variable in requests to protected API endpoints."}),"\n",(0,t.jsx)(n.p,{children:"The token grants access based on the scopes requested during authorization (e.g. get_player.information). Be sure to store and transmit the token securely. If needed, refresh the token depending on the lifetime returned in the response."}),"\n",(0,t.jsxs)(n.p,{children:["For more details about OAuth authentication, refer to the ",(0,t.jsx)(n.a,{href:"./oauth-guide",children:"OAuth Guide"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,t.jsx)(n.p,{children:"If a request fails, the API responds with standard HTTP error codes and messages."}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-http",children:"HTTP/1.1 500 Internal Server Error\n"})}),"\n",(0,t.jsx)(n.h2,{id:"clubs",children:"Clubs"}),"\n",(0,t.jsx)(n.p,{children:"Clubs holds basic information of a given club. Focus point on Clubs is the ID which must be used to lookup courses (See section about Courses)"}),"\n",(0,t.jsx)(n.p,{children:"Here is a list of the club info."}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Nullable"}),(0,t.jsx)(n.th,{children:"Remarks"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"ID"}),(0,t.jsx)(n.td,{children:"GUID"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Database ID"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"UnionNumber"}),(0,t.jsx)(n.td,{children:"Integer"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Official club number"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Name"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Official club name"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"ShortName"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Three letter short name"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"AddressLine1"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Street name"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"AddressLine2"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Secondary address info, C/O"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"StreetNumber"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Street number"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Floor"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Floor of build"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Side"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Side on floor"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"ZipCode"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Zip code"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"City"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"City name"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"PrimaryPhone"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Main telephone number"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"PrimaryEmail"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Main e-mail address"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Homepage"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Web site address"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"how-do-i-look-up-club-info",children:"How do I look up club info?"}),"\n",(0,t.jsx)(n.p,{children:"You can get a list of all clubs by making the following API request."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Request"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-http",children:"GET https://<base_url>/<apiset>/Clubs\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can get info about a specific club by making the following API request."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Request"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-http",children:"GET https://<base_url>/<apiset>/Clubs/ADABD19C-D1EA-45CE-AF2B-8F5407D000A6\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n   "ID": "ADABD19C-D1EA-45CE-AF2B-8F5407D000A6",\n   "Name": "L\xfcbker Golf Klub",\n   "UnionNumber": 202,\n   "ShortName": "",\n   "AddressLine1": "Trent Jones All\xe9",\n   "AddressLine2": null,\n   "StreetNumber": "3",\n   "Floor": null,\n   "Side": null,\n   "ZipCode": "8581",\n   "City": "Nimtofte",\n   "PrimaryPhone": "38408050",\n   "PrimaryEmail": "info@lubker.com",\n   "Homepage": "www.lubker.com"\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"courses",children:"Courses"}),"\n",(0,t.jsx)(n.p,{children:"Courses holds basic information such as name, number of holes e.g. Courses also holds tees, there could be multiple tees with different names and assigned to different genders. Tees contains all the holes with pars, indexes and e.g."}),"\n",(0,t.jsx)(n.p,{children:"Here is a list of the relevant course info."}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Nullable"}),(0,t.jsx)(n.th,{children:"Remarks"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"TemplateID"}),(0,t.jsx)(n.td,{children:"GUID"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Database ID for the course"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"ClubID"}),(0,t.jsx)(n.td,{children:"GUID"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Reference to CLUB"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Name"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Official course name"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"NumberOfHoles"}),(0,t.jsx)(n.td,{children:"Int"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Typically 9 or 18"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"ActivationDate"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"The date where the course is valid from (Format: yyyymmddThhnnss)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"IsActive"}),(0,t.jsx)(n.td,{children:"Boolean"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Indicates if a club course is currently active"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"IsHcpQualifying"}),(0,t.jsx)(n.td,{children:"Boolean"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Indicates if a club course is aproved for handicap qualifying"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"IsVisible"}),(0,t.jsx)(n.td,{children:"Boolean"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Indicates if a club course is visible"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Version"}),(0,t.jsx)(n.td,{children:"Int"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Incremental version number"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"ID"}),(0,t.jsx)(n.td,{children:"GUID"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Version ID"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Tees"}),(0,t.jsx)(n.td,{children:"[List]"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 Name"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Name of tee"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 Gender"}),(0,t.jsx)(n.td,{children:"Int"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"1 = Female, 2 = Male"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 TotalLength"}),(0,t.jsx)(n.td,{children:"Int"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Sum of hole lengths"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 CourseRating"}),(0,t.jsx)(n.td,{children:"Decimal"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Official course rating value (format: x * 10000)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 SlopeRating"}),(0,t.jsx)(n.td,{children:"Int"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Official slope rating value"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 IsNineHole"}),(0,t.jsx)(n.td,{children:"Boolean"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Indicates if this tee is nine holes only"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 Holes"}),(0,t.jsx)(n.td,{children:"[List]"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 Name"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Alternative hole number/hole name"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 Number"}),(0,t.jsx)(n.td,{children:"Int"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Official hole number"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 Par"}),(0,t.jsx)(n.td,{children:"Int"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Official par of hole"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 Index"}),(0,t.jsx)(n.td,{children:"Int"}),(0,t.jsx)(n.td,{children:"Yes/No"}),(0,t.jsx)(n.td,{children:"Hole index"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 Length"}),(0,t.jsx)(n.td,{children:"Int"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Official length of hole"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 IdealTime"}),(0,t.jsx)(n.td,{children:"Int"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Ideal number of minutes for playing the hole"})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," Some properties in the response are not described, because they are not relevant for scoring apps."]}),"\n",(0,t.jsx)(n.h3,{id:"how-do-i-look-up-club-courses",children:"How do I look up club courses?"}),"\n",(0,t.jsx)(n.p,{children:"You can get a list of club courses in a club by making the following API request.\nThe Club Database ID must be included in the URL."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Request"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"GET https://<base_url>/<apiset>/clubs/7AABAF90-9155-4552-889B-553D5CE75FC6/courses?excludeParams=tees\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'[\n    {\n        "TemplateID": "BFBD5556-7C08-4C70-99B3-0B5FFFE29994",\n        "ExternalID": null,\n        "RatedCourse": "",\n        "IsHcpQualifying": false,\n        "IsVisible": true,\n        "Version": 1,\n        "Tees": [],\n        "Created": "20250219T132329",\n        "ID": "6E07E6EA-6E6F-4615-95C0-A1837ECF7CEF",\n        "ClubID": "7AABAF90-9155-4552-889B-553D5CE75FC6",\n        "Name": "Test af ikke rated bane II",\n        "NumberOfHoles": 9,\n        "ActivationDate": "20250218T230000",\n        "IsActive": true\n    },\n    {\n        "TemplateID": "BFBD5556-7C08-4C70-99B3-0B5FFFE29994",\n        "ExternalID": null,\n        "RatedCourse": "",\n        "IsHcpQualifying": false,\n        "IsVisible": true,\n        "Version": 2,\n        "Tees": [],\n        "Created": "20250219T133447",\n        "ID": "9064AFFA-19EC-4F40-87EB-8BDAC7D7E808",\n        "ClubID": "7AABAF90-9155-4552-889B-553D5CE75FC6",\n        "Name": "Test af ikke rated bane II",\n        "NumberOfHoles": 9,\n        "ActivationDate": "20250218T230000",\n        "IsActive": true\n    },\n    {\n        "TemplateID": "BFBD5556-7C08-4C70-99B3-0B5FFFE29994",\n        "ExternalID": null,\n        "RatedCourse": "",\n        "IsHcpQualifying": true,\n        "IsVisible": true,\n        "Version": 3,\n        "Tees": [],\n        "Created": "20250219T134055",\n        "ID": "4B1513A1-531F-4AC8-BFE8-7241D0D8700F",\n        "ClubID": "7AABAF90-9155-4552-889B-553D5CE75FC6",\n        "Name": "Test af ikke rated bane II",\n        "NumberOfHoles": 9,\n        "ActivationDate": "20250218T230000",\n        "IsActive": true\n    },\n    {\n        "TemplateID": "BFBD5556-7C08-4C70-99B3-0B5FFFE29994",\n        "ExternalID": null,\n        "RatedCourse": "",\n        "IsHcpQualifying": false,\n        "IsVisible": true,\n        "Version": 4,\n        "Tees": [],\n        "Created": "20250219T134440",\n        "ID": "28577417-CF9D-40EB-90E1-2C907A0E9A9F",\n        "ClubID": "7AABAF90-9155-4552-889B-553D5CE75FC6",\n        "Name": "Test af ikke rated bane II",\n        "NumberOfHoles": 9,\n        "ActivationDate": "20250227T230000",\n        "IsActive": false\n    },\n    {\n        "TemplateID": "4CBDD644-F538-412D-B6F4-3F9C77CF3719",\n        "ExternalID": null,\n        "RatedCourse": "",\n        "IsHcpQualifying": true,\n        "IsVisible": true,\n        "Version": 1,\n        "Tees": [],\n        "Created": "20250331T110505",\n        "ID": "AC786C00-2AA6-4D96-AF45-06C33196C86E",\n        "ClubID": "7AABAF90-9155-4552-889B-553D5CE75FC6",\n        "Name": "Test par 3 WHS",\n        "NumberOfHoles": 9,\n        "ActivationDate": "20250330T220000",\n        "IsActive": false\n    },\n    {\n        "TemplateID": "1677552B-FA15-4F38-AE92-9101F7056A77",\n        "ExternalID": null,\n        "RatedCourse": "",\n        "IsHcpQualifying": true,\n        "IsVisible": true,\n        "Version": 1,\n        "Tees": [],\n        "Created": "20250331T110601",\n        "ID": "BC487BD9-AE99-4450-89DA-3FBE31E50013",\n        "ClubID": "7AABAF90-9155-4552-889B-553D5CE75FC6",\n        "Name": "Test par 3 WHS II",\n        "NumberOfHoles": 9,\n        "ActivationDate": "20250330T220000",\n        "IsActive": false\n    },\n    {\n        "TemplateID": "DAD70D9D-7D06-443B-8FF7-D704EC65C557",\n        "ExternalID": null,\n        "RatedCourse": "",\n        "IsHcpQualifying": true,\n        "IsVisible": true,\n        "Version": 1,\n        "Tees": [],\n        "Created": "20250618T121018",\n        "ID": "91149D2F-ED5C-4BF1-8759-E1ED3C46E70D",\n        "ClubID": "7AABAF90-9155-4552-889B-553D5CE75FC6",\n        "Name": "Ny 18 F9",\n        "NumberOfHoles": 9,\n        "ActivationDate": "20250531T220000",\n        "IsActive": false\n    },\n    {\n        "TemplateID": "DAD70D9D-7D06-443B-8FF7-D704EC65C557",\n        "ExternalID": null,\n        "RatedCourse": "",\n        "IsHcpQualifying": true,\n        "IsVisible": true,\n        "Version": 2,\n        "Tees": [],\n        "Created": "20250623T134207",\n        "ID": "E46D45F0-82F2-4AB2-B70C-38B490763FE5",\n        "ClubID": "7AABAF90-9155-4552-889B-553D5CE75FC6",\n        "Name": "Ny 18 F9",\n        "NumberOfHoles": 9,\n        "ActivationDate": "20250622T220000",\n        "IsActive": true\n    },\n    {\n        "TemplateID": "CA1636A2-4D6E-4078-AD38-D7F8BD23D76C",\n        "ExternalID": null,\n        "RatedCourse": "",\n        "IsHcpQualifying": true,\n        "IsVisible": true,\n        "Version": 1,\n        "Tees": [],\n        "Created": "20250618T121232",\n        "ID": "36D33C80-BED7-4175-BC53-0E2957556305",\n        "ClubID": "7AABAF90-9155-4552-889B-553D5CE75FC6",\n        "Name": "Ny 18 hullers WHS bane",\n        "NumberOfHoles": 18,\n        "ActivationDate": "20250531T220000",\n        "IsActive": false\n    },\n    {\n        "TemplateID": "CA1636A2-4D6E-4078-AD38-D7F8BD23D76C",\n        "ExternalID": null,\n        "RatedCourse": "",\n        "IsHcpQualifying": true,\n        "IsVisible": true,\n        "Version": 2,\n        "Tees": [],\n        "Created": "20250623T141638",\n        "ID": "4FC90CA7-0175-4EB8-8A5E-290DAC67C77E",\n        "ClubID": "7AABAF90-9155-4552-889B-553D5CE75FC6",\n        "Name": "Ny 18 hullers WHS bane",\n        "NumberOfHoles": 18,\n        "ActivationDate": "20250622T220000",\n        "IsActive": true\n    }\n]\n'})}),"\n",(0,t.jsx)(n.p,{children:"You can get a single club course by making the following API request.\nA club course can be referenced by a Club ID and then Course ID"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Request"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"GET https://<base_url>/<apiset>//clubs/7AABAF90-9155-4552-889B-553D5CE75FC6/courses/CA1636A2-4D6E-4078-AD38-D7F8BD23D76C\n"})}),"\n",(0,t.jsx)(n.h3,{id:"available-parameters",children:"Available parameters"}),"\n",(0,t.jsx)(n.p,{children:"The following query parameters can be used when calling the apis above:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-http",children:'GET {{base_url}}/:ApiSet/Clubs/:ClubID/Courses\nGET {{base_url}}/:ApiSet/Clubs/:ClubID/Courses/CourseID\n\nAvailable parameters:\nchangedsince    - format: yyyymmddTHhmmss, return the courses that changed after a specific date\nactive          - accept 0 or 1, return courses based on Course.IsActive property, where 0 = inactive and 1 = active\nsort            - see tip sort\nsortTee         - see tip sortTee\nexcludeParams   - exclude Course.Tees property from result by including "&excludeParams=tees" parameter\n'})}),"\n",(0,t.jsxs)(n.admonition,{title:"TIP SORT",type:"tip",children:[(0,t.jsxs)(n.p,{children:["The courses can be sorted by including the ",(0,t.jsx)(n.code,{children:"sort"})," parameter."]}),(0,t.jsxs)(n.p,{children:["The parameter must follow this format: ",(0,t.jsx)(n.code,{children:"PropName:SortDirection,..."})]}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"PropName"})," can be:",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.code,{children:"Name"}),", ",(0,t.jsx)(n.code,{children:"NumberOfHoles"}),", ",(0,t.jsx)(n.code,{children:"ActivationDate"}),", ",(0,t.jsx)(n.code,{children:"IsActive"}),", ",(0,t.jsx)(n.code,{children:"IsHcpQualifying"}),", ",(0,t.jsx)(n.code,{children:"IsVisible"}),", ",(0,t.jsx)(n.code,{children:"Version"})]}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"SortDirection"})," must be ",(0,t.jsx)(n.code,{children:"0"})," or ",(0,t.jsx)(n.code,{children:"1"}),", where ",(0,t.jsx)(n.code,{children:"0"})," is ascending and ",(0,t.jsx)(n.code,{children:"1"})," is descending."]}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Examples"}),":"]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Sort by highest number of holes: ",(0,t.jsx)(n.code,{children:"&sort=NumberOfHoles:1"})]}),"\n",(0,t.jsxs)(n.li,{children:["Sort by active and then latest activation date: ",(0,t.jsx)(n.code,{children:"&sort=IsActive:0,ActivationDate:1"})]}),"\n"]})]}),"\n",(0,t.jsxs)(n.admonition,{title:"TIP SORTTEE",type:"tip",children:[(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Course.Tees"})," properties can be sorted by including the ",(0,t.jsx)(n.code,{children:"sortTee"})," parameter."]}),(0,t.jsxs)(n.p,{children:["The parameter must follow this format: ",(0,t.jsx)(n.code,{children:"PropName:SortDirection,..."})]}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"PropName"})," can be:",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.code,{children:"Name"}),", ",(0,t.jsx)(n.code,{children:"Gender"}),", ",(0,t.jsx)(n.code,{children:"TotalLength"}),", ",(0,t.jsx)(n.code,{children:"CourseRating"}),", ",(0,t.jsx)(n.code,{children:"SlopeRating"}),", ",(0,t.jsx)(n.code,{children:"IsNineHole"}),", ",(0,t.jsx)(n.code,{children:"LastUpdateDate"})]}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"SortDirection"})," must be ",(0,t.jsx)(n.code,{children:"0"})," or ",(0,t.jsx)(n.code,{children:"1"}),", where ",(0,t.jsx)(n.code,{children:"0"})," is ascending and ",(0,t.jsx)(n.code,{children:"1"})," is descending."]}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Examples"}),":"]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Sort by longest tee: ",(0,t.jsx)(n.code,{children:"&sortTee=TotalLength:1"})]}),"\n",(0,t.jsxs)(n.li,{children:["Sort by gender and then highest course rating: ",(0,t.jsx)(n.code,{children:"&sortTee=Gender:0,CourseRating:1"})]}),"\n"]})]}),"\n",(0,t.jsx)(n.p,{children:"When determining which vesion to use if there are many active"}),"\n",(0,t.jsx)(n.h2,{id:"members",children:"Members"}),"\n",(0,t.jsx)(n.p,{children:"Every person in the database has an ID called LifeTimeID. The format of this number is [xxxxxx-xxx], where\nthe first 6 are based on the persons birthdate, and the last 3 are an increment integer grouped by\nbirthdate."}),"\n",(0,t.jsx)(n.p,{children:"A person can be a member of a golf club. The relationship between a person and club is a membership. A\nperson can also be a member of more than one club, thus having multiple memberships.\nBeing a member in a golf club means that you get a member number, which is unique within the club. This\nmember number has nothing to do with the lifetime ID. If we put together the official club number and the\nmember number, we have a nationally unique reference for a member. This combination is called the\n\u2018union ID\u2019"}),"\n",(0,t.jsx)(n.p,{children:"Member info can be looked up by a lifetime ID or by union ID.\nMember info consist of both personal info and membership info.\nWhen a member is looked up the complete information including the person and all memberships is returned."}),"\n",(0,t.jsx)(n.p,{children:"Here is a list of the member info."}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Nullable"}),(0,t.jsx)(n.th,{children:"Remarks"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"ID"}),(0,t.jsx)(n.td,{children:"GUID"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Database ID"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"LifeTimeID"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"12-digit number"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"FirstName"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"LastName"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Gender"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Male or Female"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"BirthDate"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"The official birth date (Format: yyyymmddThhnnss)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"RightToPlay"}),(0,t.jsx)(n.td,{children:"Boolean"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Indicates if the player has a national playing right"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Status"}),(0,t.jsx)(n.td,{children:"Int"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"1 = Amateur, 2 = Professional"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Handicap"}),(0,t.jsx)(n.td,{children:"Decimal"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Official handicap index"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"HandicapStatus"}),(0,t.jsx)(n.td,{children:"Boolean"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"1 = Active, (others to be decided depending on new WHS)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Memberships"}),(0,t.jsx)(n.td,{children:"[List]"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 ID"}),(0,t.jsx)(n.td,{children:"GUID"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Database ID"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 IsHomeClub"}),(0,t.jsx)(n.td,{children:"Boolean"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Indicates if the membership is the home club membership"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 LocalRightToPlay"}),(0,t.jsx)(n.td,{children:"Boolean"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Indicates if the player has a local playing right"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 Type"}),(0,t.jsx)(n.td,{children:"Int"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"1 = Active, 7 = Former"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 UnionID"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Combination of the Club Number and the Member Number, e.g. 88-534"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 Club"}),(0,t.jsx)(n.td,{children:"Object"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"Club info of the membership club"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 ID"}),(0,t.jsx)(n.td,{children:"GUID"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Database ID of the club"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 Name"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Official name of the club"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 ShortName"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Short version of the club name"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 UnionNumber"}),(0,t.jsx)(n.td,{children:"Int"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Official club number"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 HomeClub"}),(0,t.jsx)(n.td,{children:"Object"}),(0,t.jsx)(n.td,{}),(0,t.jsx)(n.td,{children:"Club info about the home club (same as membership club if IsHomeClub)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 ID"}),(0,t.jsx)(n.td,{children:"GUID"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Database ID of the club"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 Name"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Official name of the club"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 ShortName"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Short version of the club name"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 UnionNumber"}),(0,t.jsx)(n.td,{children:"Int"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Official club number"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"how-do-i-look-up-member-info",children:"How do I look up member info?"}),"\n",(0,t.jsx)(n.p,{children:"This is dependent on your access level and agreement."}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"If you represent a given golf club and have been given access to all members without their consent by the club then you can look up members in that (or those) club(s)."}),"\n",(0,t.jsxs)(n.li,{children:["If you are an independent actor you will need player consent to access their information. That is given through the OAuth login and accompanying token - refer to the ",(0,t.jsx)(n.a,{href:"./oauth-guide",children:"OAuth Guide"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"re-point-1",children:"Re point 1:"}),"\n",(0,t.jsx)(n.p,{children:"You can get info about a specific member in a club you are certified to access by making the following API request.\nYou can refer to the member by\n\u2022 lifetimeID\n\u2022 unionID"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Request"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"GET https://<base_url>/<apiset>/Clubs/Golfer?lifetimeID=300191-001?unionID=202-331\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n"ID": "86A8D54D-4B90-4145-9583-0B1CD2766869",\n"LifeTimeID": "300191-001",\n"FirstName": "Nikolaj Bille",\n"LastName": "Nielsen",\n"Gender": "Male",\n"BirthDate": "19910130T000000",\n"RightToPlay": true,\n"Status": 1,\n"PlayerStatus": 1,\n"Handicap": "340000",\n"HandicapStatus": 1,\n"Memberships": [\n{\n"ID": "ADF707B0-AA02-408E-9687-B41AEA0DFDE7",\n"IsHomeClub": true,\n"LocalRightToPlay": true,\n"Type": 1,\n"UnionID": "202-331",\n"HomeClub": {\n"ID": "ADABD19C-D1EA-45CE-AF2B-8F5407D000A6",\n"Name": "L\xfcbker Golf Klub",\n"ShortName": "",\n"UnionNumber": 202\n},\n"Club": {\n"ID": "ADABD19C-D1EA-45CE-AF2B-8F5407D000A6",\n"Name": "L\xfcbker Golf Klub",\n"ShortName": "",\n"UnionNumber": 202\n}\n}\n]\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"re-point-2",children:"Re point 2:"}),"\n",(0,t.jsx)(n.p,{children:"You can retrieve information about a specific member who has granted consent by using the token obtained during the authentication process. This is done via the following API."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Request"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"GET https://<base_url>/<apiset>/clubs/Golfer_ByAccessToken\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Required Headers"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Authorization: Basic <username:password>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Token: <access_token>"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n    "ID": "209A4387-F75A-4C32-B4F2-01DF6FD2996D",\n    "LifeTimeID": "010182-008",\n    "FirstName": "Ingenium",\n    "LastName": "Test III",\n    "Gender": "Male",\n    "BirthDate": "19800101T000000",\n    "Email": "nih@dgu.org",\n    "RightToPlay": true,\n    "Status": 1,\n    "PlayerStatus": 1,\n    "Handicap": "520000",\n    "HandicapStatus": 3,\n    "HandicapDato": "20210111T104421",\n    "Memberships": [\n        {\n            "ID": "08D1CC55-2AF1-45C2-8BB4-765A0E1B24D6",\n            "IsHomeClub": true,\n            "LocalRightToPlay": true,\n            "Type": 1,\n            "UnionID": "1016-102",\n            "HomeClub": {\n                "ID": "7AABAF90-9155-4552-889B-553D5CE75FC6",\n                "Name": "DGU Test Club A II",\n                "ShortName": "DGUA",\n                "Union": 1,\n                "UnionNumber": 1016\n            },\n            "Club": {\n                "ID": "7AABAF90-9155-4552-889B-553D5CE75FC6",\n                "Name": "DGU Test Club A II",\n                "ShortName": "DGUA",\n                "Union": 1,\n                "UnionNumber": 1016\n            }\n        }\n    ]\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"scores",children:"Scores"}),"\n",(0,t.jsx)(n.p,{children:"All the scores that are posted to the database goes into a module called the \u201cScorecard Exchange\u201d.\nScorecards will then later be picked up and processed, which ultimately would trigger a handicap\nadjustment."}),"\n",(0,t.jsx)(n.p,{children:"Here is a list of the scorecard info."}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Nullable"}),(0,t.jsx)(n.th,{children:"Remarks"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"ID"}),(0,t.jsx)(n.td,{children:"GUID"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Database ID set by scoring app"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"CreateDateTime"}),(0,t.jsx)(n.td,{children:"DateTime"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Date and time scorecard was created (Format: yyyymmddThhnnss)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"ExternalID"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"ExternalID is a unique identifier created by the scoring app to track the scorecard in its own system or database."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"HCP"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"(Decimal) The exact HCP the round was played off (format: x * 10000)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"CourseHandicap"}),(0,t.jsx)(n.td,{children:"Integer"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"The course handicap the round was played off. (Spillehandicap i DK) - if left out PHCP is used"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"PHCP"}),(0,t.jsx)(n.td,{children:"Integer"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"The playing handicap the round was played off (justeret spillehandicap i DK)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Comment"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Course"}),(0,t.jsx)(n.td,{children:"Object"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 CourseID"}),(0,t.jsx)(n.td,{children:"GUID"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Reference to Course Database ID"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 ExternalID"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Possible local ID"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 ClubID"}),(0,t.jsx)(n.td,{children:"GUID"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Reference to Club Database ID"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 Name"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Name of the course"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 Country"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"ISO2 Country Code"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 TeeID"}),(0,t.jsx)(n.td,{children:"GUID"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Reference to Tee Database ID"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 TeeName"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Name of the tee"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 TeePar"}),(0,t.jsx)(n.td,{children:"Integer"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Total par of the holes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 TeeRating"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"(Decimal) Official course rating value (format: x * 10000)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 TeeSlope"}),(0,t.jsx)(n.td,{children:"Decimal"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Official slope rating value"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 Holes"}),(0,t.jsx)(n.td,{children:"[List]"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 Number"}),(0,t.jsx)(n.td,{children:"Int"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Official hole number"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 Par"}),(0,t.jsx)(n.td,{children:"Int"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Official par of hole"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 Index"}),(0,t.jsx)(n.td,{children:"Int"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Hole index"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 Length"}),(0,t.jsx)(n.td,{children:"Int"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Official length of hole"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 SPH"}),(0,t.jsx)(n.td,{children:"Int"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Extra Strokes on hole from playing handicap"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Round"}),(0,t.jsx)(n.td,{children:"Object"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 HolesPlayed"}),(0,t.jsx)(n.td,{children:"Integer"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Number of holes played"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 RoundType"}),(0,t.jsx)(n.td,{children:"Integer"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"1 = General Play, 2 = Tournament"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 StartTime"}),(0,t.jsx)(n.td,{children:"DateTime"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"The date and time the round was played (Format: yyyymmddThhnnss)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 TournamentName"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Name of tournament played (if roundtype = 2)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 TournamentRoundNumber"}),(0,t.jsx)(n.td,{children:"Integer"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Number of tournament round played (if roundtype = 2)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Result"}),(0,t.jsx)(n.td,{children:"Object"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 Points"}),(0,t.jsx)(n.td,{children:"[List]"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Comma-separated list with stableford points per hole"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 Strokes"}),(0,t.jsx)(n.td,{children:"[List]"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Comma-separated list with strokes per hole (0 = ball picked up, -1 = hole not played)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 TotalPoints"}),(0,t.jsx)(n.td,{children:"Integer"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Total number of stableford points achieved"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 TotalStrokes"}),(0,t.jsx)(n.td,{children:"Integer"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Total number of strokes used (0 if ball was picked up on any hole)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 NetDoubleBogeyGross"}),(0,t.jsx)(n.td,{children:"Integer"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Total Adjusted Gross Score (total of net score limited by Net Double Bogey on each hole)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 IsQualifying"}),(0,t.jsx)(n.td,{children:"Boolean"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Determines if the score is acceptable for handicapping purposes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Player"}),(0,t.jsx)(n.td,{children:"Object"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 FullName"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"The full name of the player"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 HomeClubName"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Name of the player\u2019s home club"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 HomeClubCountry"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Country of the player\u2019s home club"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 LifeTimeID"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Lifetime ID of the player"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 UnionID"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Union ID of the player"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Marker"}),(0,t.jsx)(n.td,{children:"Object"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 FullName"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"The full name of the marker"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 HomeClubName"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"No"}),(0,t.jsx)(n.td,{children:"Name of the marker\u2019s home club"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 LifeTimeID"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Lifetime ID of the marker if applicable"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u2514\u2500 UnionID"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"Yes"}),(0,t.jsx)(n.td,{children:"Union ID of the marker if applicable"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"how-do-i-create-scorecards",children:"How do I create scorecards?"}),"\n",(0,t.jsx)(n.p,{children:"Scorecards must all be sent to the Scorecard Exchange module. You do this by making the following API\nrequest."}),"\n",(0,t.jsxs)(T,{children:[(0,t.jsx)(y,{value:"Eksempel",label:"Eksempel API",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "ID": "7a59ca0a-525b-4884-8161-94572c2de3a2",\n    "CreateDateTime": "20250625T130200",\n    "ExternalID": "1016-1-25062025-Yellow-18-9",\n    "HCP": "90000",\n    "CourseHandicap": 9,\n    "Course": {\n      "CourseID": "CA1636A2-4D6E-4078-AD38-D7F8BD23D76C",\n      "ClubID": "7AABAF90-9155-4552-889B-553D5CE75FC6",\n      "ClubName": "DGU Test Club A II",\n      "TeeID": "629BDEEC-5D1F-4309-861E-08B072D9509A",\n      "TeeName": "2_Yellow",\n      "TeePar": 72,\n      "TeeSlope": 119,\n      "TeeRating": "718000"\n    },\n    "Marker": {\n      "FullName": "Jonas Meyer Jensen",\n      "LifeTimeID": "010156-012",\n      "UnionID": "1016-100"\n    },\n    "Result": {\n    "Strokes": [6, 5, 5, 5, 5, 5, 5, 5, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5],\n    "TotalStrokes": 90,\n    "NetDoubleBogeyGross": 90,\n    "IsQualifying": true\n  },\n    "Round": {\n      "HolesPlayed": 18,\n      "RoundType": 1,\n      "StartTime": "20250622T145700"\n    },\n    "Player": {\n      "FullName": "Nick H\xfcttel",\n      "HomeClubName": "DGU Test Club A II",\n      "HomeClubCountry": "DK",\n      "LifeTimeID": "160575-026",\n      "UnionID": "1016-1"\n    }\n  }\n]\n'})})}),(0,t.jsx)(y,{value:"Minimum",label:"Minimum Api",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "CreateDateTime": "20250616T090200",\n    "ExternalID": "1016-1-16062025-Yellow-18-1",\n    "HCP": "90000",\n    "CourseHandicap": 9,\n    "Course": {\n      "CourseID": "CA1636A2-4D6E-4078-AD38-D7F8BD23D76C",\n      "ClubID": "7AABAF90-9155-4552-889B-553D5CE75FC6",\n      "TeeID": "629BDEEC-5D1F-4309-861E-08B072D9509A"\n    },\n    "Marker": {\n      "FullName": "Jonas Meyer Jensen",\n      "LifeTimeID": "010156-012",\n      "UnionID": "1016-100"\n    },\n    "Result": {\n    "Strokes": [6, 5, 0, 5, 5, 5, 5, 5, 4, 5, 5, 5, 5, 5, 0, 5, 5, -1],\n    "IsQualifying": true\n  },\n    "Round": {\n      "HolesPlayed": 18,\n      "RoundType": 1,\n      "StartTime": "20250616T115700"\n    },\n    "Player": {\n      "UnionID": "1016-1"\n    }\n  }\n]\n'})})}),(0,t.jsx)(y,{value:"Total",label:"Total possible Api",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "ID": "00000000-0000-0000-0000-000000000000",\n    "CreateDateTime": "20250626T105455",\n    "ExternalID": "string",\n    "HCP": 0,\n    "CourseHandicap": 0,\n    "PHCP": 0,\n    "Comment": "string",\n    "Course": {\n      "CourseID": "00000000-0000-0000-0000-000000000000",\n      "ExternalID": "string",\n      "Name": "string",\n      "Country": "string",\n      "ClubID": "00000000-0000-0000-0000-000000000000",\n      "ClubName": "string",\n      "TeeID": "00000000-0000-0000-0000-000000000000",\n      "TeeName": "string",\n      "TeePar": 0,\n      "TeeSlope": 0,\n      "TeeRating": 0,\n      "Holes": [\n        {\n          "Number": 1,\n          "Index": 0,\n          "Par": 0,\n          "Length": 0,\n          "SPH": 0\n        }\n        {\n          "Number": 2,\n          "Index": 0,\n          "Par": 0,\n          "Length": 0,\n          "SPH": 0\n        }\n        .....\n      ]\n    },\n    "Marker": {\n      "FullName": "string",\n      "HomeClubName": "string",\n      "LifeTimeID": "string",\n      "UnionID": "string"\n    },\n    "Result": {\n      "Strokes": [\n        0\n      ],\n      "Points": [\n        0\n      ],\n      "TotalStrokes": 0,\n      "TotalPoints": 0,\n      "NetDoubleBogeyGross": 0,\n      "IsQualifying": true\n    },\n    "Round": {\n      "HolesPlayed": 0,\n      "RoundType": 0,\n      "StartTime": "20250626T105455",\n      "TournamentName": "string",\n      "TournamentRoundNumber": 0\n    },\n    "Player": {\n      "FullName": "string",\n      "HomeClubName": "string",\n      "HomeClubCountry": "string",\n      "LifeTimeID": "string",\n      "UnionID": "string"\n    }\n  }\n]\n'})})})]}),"\n",(0,t.jsx)(n.h2,{id:"how-do-i-see-all-available-apis",children:"How do I see all available APIs?"}),"\n",(0,t.jsx)(n.p,{children:"Log in with your username and password here:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://test-dgubasen.api.union.golfbox.io/login.aspx",children:"https://test-dgubasen.api.union.golfbox.io/login.aspx"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://dgubasen.api.union.golfbox.io/login.aspx",children:"https://dgubasen.api.union.golfbox.io/login.aspx"})}),"\n",(0,t.jsx)(n.p,{children:"This will show the Swagger documentation for the available APIs for your account"}),"\n",(0,t.jsx)(n.h2,{id:"test-data",children:"Test data"}),"\n",(0,t.jsx)(n.p,{children:"To test player information API's the following testusers can be used (PW is needed to login as player and get token)"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"UnionID"}),(0,t.jsx)(n.th,{children:"PW"}),(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Token"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"1016-3"}),(0,t.jsx)(n.td,{children:"gb1234"}),(0,t.jsx)(n.td,{children:"Test Testesen"}),(0,t.jsx)(n.td,{children:"nkwHZozarin3vzSqwOJsSa2FXQcJniUtE_RUF42t3bI"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"1016-100"}),(0,t.jsx)(n.td,{children:"msl1234"}),(0,t.jsx)(n.td,{children:"Jonas"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"1016-101"}),(0,t.jsx)(n.td,{children:"1234"}),(0,t.jsx)(n.td,{children:"Morten"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"1016-102"}),(0,t.jsx)(n.td,{children:"1234"}),(0,t.jsx)(n.td,{children:"Ingenium Test"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"1016-105"}),(0,t.jsx)(n.td,{children:"gb1234"}),(0,t.jsx)(n.td,{children:"Test Medlemstype"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"1016-15"}),(0,t.jsx)(n.td,{children:"SG1234"}),(0,t.jsx)(n.td,{children:"Tanja Lewis"}),(0,t.jsx)(n.td,{})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"1016-41"}),(0,t.jsx)(n.td,{children:"gb1234"}),(0,t.jsx)(n.td,{children:"Test Testesen"}),(0,t.jsx)(n.td,{})]})]})]}),"\n",(0,t.jsx)(n.p,{children:'To get couses look up "Ocean View Golf Club DGU" as they have the most courses in the test database'}),"\n",(0,t.jsx)(n.p,{children:'Alternatively "DGU Test Club A II" which also have courses.'}),"\n",(0,t.jsx)(n.h2,{id:"support",children:"Support"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:["If you have questions or need help, contact Dansk Golf Union:",(0,t.jsx)(n.br,{}),"\n","Email: ",(0,t.jsx)(n.a,{href:"mailto:it@dgu.org",children:"it@dgu.org"})]})]})}function w(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(B,{...e})}):B(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>l});var r=s(6540);const t={},i=r.createContext(t);function d(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);